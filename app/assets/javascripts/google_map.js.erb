var map;
var HOME_MAPTYPE_ID = 'home_style';
var marker;

function init() {

    var homeStyleProperties = [
        {
            featureType: 'all',
            stylers: [
                { "saturation": -100 },
                { "lightness": 0 },
                { "gamma": 1.18 }
            ]
        }
    ];

    var styledMapOptions = {
        //name: 'Custom Style'
        name: 'home style'
    };

    var customMapType = new google.maps.StyledMapType(homeStyleProperties, styledMapOptions);

    var $map_wrapper = $('.map-wrapper')
    var data_markers_str = $map_wrapper.attr('data-markers')
    var data_markers_format = $map_wrapper.attr('data-markers-format') || 'latlng'
    var zoom = + $map_wrapper.attr('data-zoom')
    var data_icon_width = $map_wrapper.attr('data-icon-width') || null
    var data_icon_height = $map_wrapper.attr('data-icon-height') || null
    var data_icon_url = $map_wrapper.attr("data-icon-url") || null
    var data_map_center = $map_wrapper.attr('data-center') || null
    var data_map_center_lat = null
    var data_map_center_lng = null
    if(data_map_center){
        var tmp = data_map_center.split(',')
        data_map_center_lat = + tmp[0]
        data_map_center_lng = + tmp[1]
    }
    if(typeof data_icon_width === 'string'){
        data_icon_width = + data_icon_width
    }
    if(typeof data_icon_height === 'string'){
        data_icon_height = + data_icon_height
    }

    console.log('size: ' + data_icon_width + 'x' + data_icon_height)

    var standard_method = true

    if (data_markers_str) {
        var markers = []
        var data_markers = $.parseJSON(data_markers_str)
        if(data_markers_format == 'latlng'){
            for(var i = 0; i < data_markers.length; i++) {
                var data_marker = data_markers[i]
                var m = {}
                m['lat'] = data_marker[0]
                m['lng'] = data_marker[1]
                m['title'] = data_marker[2]
                m['description'] = data_marker[3]
                markers.push(m)
            }
        }
        else{
            markers = data_markers
        }





        var first_marker = markers[0]

        var a = data_map_center_lat || first_marker.lat, b = data_map_center_lng || first_marker.lng

        var mapCenter = new google.maps.LatLng(a,b );
        map = new google.maps.Map($('.map-container').get(0), {
            scrollwheel: true,
            zoom: zoom,
            center: mapCenter,
            //mapTypeId: google.maps.MapTypeId.ROADMAP
            mapTypeId: HOME_MAPTYPE_ID
        });

        map.mapTypes.set(HOME_MAPTYPE_ID, customMapType);


        //var div = document.createElement('DIV');
        //div.innerHTML = '<div class="my-other-marker">I am flat marker!</div>';

        console.log('hello')


        if(standard_method){

        }




        for(var i=0; i<markers.length;i++) {

            var m = markers[i]

            //var $div = jQuery('<div class="marker"><div class="marker-tooltip-wrapper"><div class="marker-tooltip"><h3>'+ m.title+'</h3><p>'+ m.description+'</p></div></div></div>');
            var $div = jQuery('<div class="content"><h3>'+ m.title+'</h3><p>'+ m.description+'</p></div>');
            var $marker_tooltip = $div.find('.marker-tooltip')
            $marker_tooltip.append('')

            $div.find('a').on('click', function (event) {
                event.preventDefault()
                //alert('hello')
            })

            var div = $div.get(0)

            if(!standard_method) {

                marker = new RichMarker({
                    map: map,
                    position: new google.maps.LatLng(m.lat, m.lng),
                    draggable: false,
                    flat: true,
                    anchor: RichMarkerPosition.MIDDLE,
                    content: div
                });

                google.maps.event.addListener(marker, 'position_changed', function () {
                    log('Marker position: ' + marker.getPosition());
                });
            }
            else{
                //map.mapTypes.set(MY_MAPTYPE_ID, customMapType);
                var image;
                //image = 'http://zurc.org/wp-content/themes/zurc/img/logo_min.png';
                image = data_icon_url || "/assets/logos/ZURC-logo.png"
                var lat_lng = new google.maps.LatLng(m.lat, m.lng);

                var complex_icon = {
                    url: image
                }
                if(data_icon_width && data_icon_height){
                    complex_icon['size'] = new google.maps.Size(data_icon_width, data_icon_height)
                }



                var marker = new google.maps.Marker({
                    position: lat_lng,
                    map: map,
                    icon: complex_icon
                });

//                var metka14 = '<div id="content_window">'+
//                        '<h3>с. Торговиця</h3>'+
//                        '<p>Городенківський р-н.</p>'+
//                        '</div>';

                var infowindow = new google.maps.InfoWindow({
                    content: div
                });

                google.maps.event.addListener(marker, 'click', function() {
                    infowindow.open(map,marker);
                });
            }
        }
    }

    console.log('map initialized successfully')
}

$document.on('ready page:load', function() {
    /**
     * Called on the intiial page load.
     */









    // Register an event listener to fire when the page finishes loading.
    //google.maps.event.addDomListener(window, 'load', init);
    init()
});